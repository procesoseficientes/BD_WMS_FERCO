CREATE TABLE [FERCO].[OP_WMS_INV_X_LICENSE] (
    [PK_LINE]                                    NUMERIC (18)     IDENTITY (1, 1) NOT NULL,
    [LICENSE_ID]                                 NUMERIC (18)     NOT NULL,
    [MATERIAL_ID]                                VARCHAR (50)     NOT NULL,
    [MATERIAL_NAME]                              VARCHAR (150)    NULL,
    [QTY]                                        NUMERIC (18, 4)  NOT NULL,
    [VOLUME_FACTOR]                              NUMERIC (18)     NULL,
    [WEIGTH]                                     NUMERIC (18, 2)  NULL,
    [SERIAL_NUMBER]                              VARCHAR (50)     NULL,
    [COMMENTS]                                   VARCHAR (254)    NULL,
    [LAST_UPDATED]                               DATETIME         NULL,
    [LAST_UPDATED_BY]                            VARCHAR (25)     NULL,
    [BARCODE_ID]                                 VARCHAR (25)     NULL,
    [TERMS_OF_TRADE]                             VARCHAR (50)     NULL,
    [STATUS]                                     VARCHAR (25)     CONSTRAINT [DF_OP_WMS_INV_X_LICENSE_STATUS] DEFAULT ('PROCESSED') NULL,
    [CREATED_DATE]                               DATETIME         CONSTRAINT [DF_OP_WMS_INV_X_LICENSE_CREATED_DATE] DEFAULT (getdate()) NULL,
    [DATE_EXPIRATION]                            DATE             NULL,
    [BATCH]                                      VARCHAR (50)     NULL,
    [ENTERED_QTY]                                NUMERIC (18, 4)  NULL,
    [VIN]                                        VARCHAR (40)     NULL,
    [HANDLE_SERIAL]                              NUMERIC (18)     DEFAULT ((0)) NULL,
    [IS_EXTERNAL_INVENTORY]                      INT              DEFAULT ((0)) NOT NULL,
    [IS_BLOCKED]                                 INT              DEFAULT ((0)) NOT NULL,
    [BLOCKED_STATUS]                             VARCHAR (250)    NULL,
    [STATUS_ID]                                  INT              NULL,
    [TONE_AND_CALIBER_ID]                        INT              DEFAULT (NULL) NULL,
    [LOCKED_BY_INTERFACES]                       INT              NULL,
    [ENTERED_MEASUREMENT_UNIT]                   VARCHAR (50)     NULL,
    [ENTERED_MEASUREMENT_UNIT_QTY]               NUMERIC (18, 4)  NULL,
    [ENTERED_MEASUREMENT_UNIT_CONVERSION_FACTOR] NUMERIC (18, 4)  NULL,
    [CODE_SUPPLIER]                              VARCHAR (50)     NULL,
    [NAME_SUPPLIER]                              VARCHAR (100)    NULL,
    [IDLE]                                       INT              DEFAULT ((0)) NOT NULL,
    [NUMBER_OF_COMPLETE_RELOCATIONS]             INT              DEFAULT ((0)) NOT NULL,
    [NUMBER_OF_PARTIAL_RELOCATIONS]              INT              DEFAULT ((0)) NOT NULL,
    [NUMBER_OF_PHYSICAL_COUNTS]                  INT              DEFAULT ((0)) NOT NULL,
    [PROJECT_ID]                                 UNIQUEIDENTIFIER NULL,
    [TOTAL_POSITION]                             INT              DEFAULT ((1)) NULL,
    [IS_DISPATCH]                                INT              NULL,
    [DISPATCH_PK_LINE_SOURCE]                    NUMERIC (18)     NULL,
    [BLOCKED_BY]                                 VARCHAR (60)     NULL,
    CONSTRAINT [PK_OP_WMS_INV_X_LICENSE] PRIMARY KEY CLUSTERED ([PK_LINE] ASC),
    CONSTRAINT [CK_OP_WMS_INV_X_LICENSE] CHECK ([QTY]>=(0)),
    CONSTRAINT [OP_WMS_INV_X_LICENSE_QTY] CHECK ([QTY]>=(0)),
    CONSTRAINT [FK_OP_WMS_INV_X_LICENSE_OP_WMS_STATUS_OF_MATERIAL_BY_LICENSE_STATUS_ID] FOREIGN KEY ([STATUS_ID]) REFERENCES [FERCO].[OP_WMS_STATUS_OF_MATERIAL_BY_LICENSE] ([STATUS_ID])
);


GO
CREATE NONCLUSTERED INDEX [IDX_INV_X_LICENSE_VIN]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([VIN] ASC);


GO
CREATE NONCLUSTERED INDEX [IDX_INV_X_LICENSE_STATUS]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([LICENSE_ID] ASC, [MATERIAL_ID] ASC, [STATUS_ID] ASC);


GO
CREATE NONCLUSTERED INDEX [IDX_INV_X_LICENSE_MATERIAL_LICENSE_STATUS]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([LICENSE_ID] ASC, [MATERIAL_ID] ASC, [MATERIAL_NAME] ASC, [QTY] ASC, [STATUS_ID] ASC);


GO
CREATE NONCLUSTERED INDEX [IX_OP_WMS_INV_X_LICENSE]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([LICENSE_ID] ASC, [MATERIAL_ID] ASC)
    INCLUDE([BARCODE_ID], [BATCH], [CREATED_DATE], [DATE_EXPIRATION], [ENTERED_QTY], [MATERIAL_NAME], [QTY], [TERMS_OF_TRADE], [TONE_AND_CALIBER_ID], [VIN]);


GO
CREATE NONCLUSTERED INDEX [IDX_QTY_LOCKED_BY_INTERFACES_INV_X_LICENSE]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([QTY] ASC, [LOCKED_BY_INTERFACES] ASC)
    INCLUDE([DATE_EXPIRATION], [LICENSE_ID], [STATUS_ID], [MATERIAL_ID]);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_INV_X_LICENSE_LICENSE_ID]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([LICENSE_ID] ASC)
    INCLUDE([IS_BLOCKED], [LOCKED_BY_INTERFACES]);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_INV_X_LICENSE_QTY]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([QTY] ASC)
    INCLUDE([BARCODE_ID], [BATCH], [DATE_EXPIRATION], [HANDLE_SERIAL], [IS_EXTERNAL_INVENTORY], [LICENSE_ID], [MATERIAL_ID], [MATERIAL_NAME], [SERIAL_NUMBER], [TERMS_OF_TRADE], [VIN]);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_INV_X_LICENSE_QTY_IS_BLOCKED]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([QTY] ASC, [IS_BLOCKED] ASC)
    INCLUDE([BATCH], [DATE_EXPIRATION], [HANDLE_SERIAL], [LICENSE_ID], [MATERIAL_ID], [MATERIAL_NAME], [TERMS_OF_TRADE], [VIN]);


GO
CREATE NONCLUSTERED INDEX [IX_OP_WMS_INV_X_LICENSE_1]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([MATERIAL_ID] ASC)
    INCLUDE([DATE_EXPIRATION], [LICENSE_ID], [QTY]);


GO
CREATE NONCLUSTERED INDEX [IDX_QTY_VOLUME_FACTOR_INV_X_LICENSE]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([LICENSE_ID] ASC)
    INCLUDE([MATERIAL_ID], [QTY], [VOLUME_FACTOR]);


GO
CREATE NONCLUSTERED INDEX [I_OP_WMS_INV_X_LICENSE_MATERIAL_ID]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([MATERIAL_ID] ASC, [QTY] ASC, [STATUS_ID] ASC)
    INCLUDE([LICENSE_ID], [SERIAL_NUMBER], [BARCODE_ID], [TERMS_OF_TRADE], [DATE_EXPIRATION], [BATCH], [VIN], [HANDLE_SERIAL], [IS_EXTERNAL_INVENTORY], [TONE_AND_CALIBER_ID], [LOCKED_BY_INTERFACES]);


GO
CREATE NONCLUSTERED INDEX [IDX_LOCKED_BY_INTERFACES]
    ON [FERCO].[OP_WMS_INV_X_LICENSE]([LOCKED_BY_INTERFACES] ASC)
    INCLUDE([LICENSE_ID], [MATERIAL_ID], [MATERIAL_NAME], [QTY], [STATUS_ID], [PROJECT_ID]);

